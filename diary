03 May 2018
Added has_a_postcode function to manage lat/long outside of uk
Added is_good_speed function to filter out speeds too high or low. Now, just tests for -ve speeds
27 April 2018
Added splitfile because original data file was too big for excel and python memory
No need to run closestpoint on each of the 3 output files {edit: not sure if this is true}
26 April 2018
Pushing to github
25 April 2018
Added code to check lat/long to remove NI and non-gb locations
24 April 2018
Added filter to only get GB results
Using full data file
23 April 2018
I have an efficient algorithm for finding nearest post code sector but could probably improve data structure.
Nonetheless I get 10,000 tests against 12000 sectors in 4 seconds
23 April 2018
Added timer so we can see how efficient it is
Started using subset of data (1000 points)
Took less than 1 second
21 April 2018
Used postcode sector file successfully on dummy data
Next step: use subset of our results data. Need to import csv and then find way to append postcode sector
21 April 2018
Added code to parse sector csv to dictionary
Next step is to use this to calculate nearest sector
20 April 2018
Moved creation of postcodes array out of function so that only runs once (not 2,000,000 times!)
20 April 2018
Got test working including postcode info
20 April 2018
Created project.
Using np arrays to see if it speeds up calculations